{"version":3,"file":"static/js/547.bb3ef375.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast.module.css?f72c","components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","filmApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast__list\":\"Cast_cast__list__QTOCP\",\"cast__item\":\"Cast_cast__item__+m3Fv\",\"cast__img\":\"Cast_cast__img__kGe+2\",\"cast__character\":\"Cast_cast__character__j63dv\"};","import { getFilmCast } from 'filmApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport imageError from 'no-photo.png'\n\nconst Cast = () => {\n  const { id } = useParams();\n    const [castInfo, setCastInfo] = useState([]);\n    const imgPath = 'http://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    getFilmCast(id)\n      .then(data => {\n        setCastInfo(data.cast);\n      })\n      .catch((error) => {\n      console.log(error);\n    })\n  }, [id]);\n   \n  return (\n    <ul className={css.cast__list}>\n      {castInfo.map(({ name, profile_path, character, id }) => (\n        <li key={id} className={css.cast__item}>\n          <img\n            className={css.cast__img}\n            src={profile_path ? imgPath + profile_path : imageError}\n            alt={name}\n          />\n          <p>{name}</p>\n          <p className={css.cast__character}>Character:</p>\n          <p>{character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst END_POINT_ALL = 'trending/all/day';\nconst END_POINT_SEARCH = 'search/movie';\nconst END_POINT_DETAILS = 'movie/';\nconst KEY_API = '583e8699bc133adc4a2f7322eb108f1f';\n\nexport async function getTrendFilms() {\n    return await fetch(`${BASE_URL}${END_POINT_ALL}?api_key=${KEY_API}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText)\n            }\n            return resp.json();\n        })\n}\n\nexport async function getSearchFilms(searchQuery) {\n    return await fetch(`${BASE_URL}${END_POINT_SEARCH}?api_key=${KEY_API}&query=${searchQuery}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText)\n            }\n            return resp.json();\n        })\n}\n\nexport async function getFilmDetails(id) {\n    return await fetch(`${BASE_URL}${END_POINT_DETAILS}${id}?api_key=${KEY_API}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText)\n            }\n            return resp.json();\n        })\n}\n\nexport async function getFilmCast(id) {\n    return await fetch(`${BASE_URL}${END_POINT_DETAILS}${id}/credits?api_key=${KEY_API}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText)\n            }\n            return resp.json();\n        })\n}\n\nexport async function getFilmReviews(id) {\n    return await fetch(`${BASE_URL}${END_POINT_DETAILS}${id}/reviews?api_key=${KEY_API}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText)\n            }\n            return resp.json();\n        })\n}"],"names":["id","useParams","useState","castInfo","setCastInfo","useEffect","getFilmCast","then","data","cast","catch","error","console","log","className","css","map","name","profile_path","character","src","imageError","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","END_POINT_ALL","END_POINT_SEARCH","END_POINT_DETAILS","KEY_API","getTrendFilms","fetch","resp","ok","Error","statusText","json","getSearchFilms","searchQuery","getFilmDetails","getFilmReviews"],"sourceRoot":""}